<?php

/**
 * @file
 * Advanced Logging System for Deploy module.
 * Add ability to perform deploy process in test mode.
 */

// Translation context.
define('DEPLOY_EXTRA_LOG_TRANSLATE_CONTEXT', 'deploy_extra_log');
define('DEPLOY_EXTRA_LOG_TABLE_NAME', 'deploy_extra_import_log');

/**
 * Include checking structure hook implementations.
 */
module_load_include('inc', 'deploy_extra_log', 'deploy_extra_log.core');

/**
 * Implements hook_deploy_extra_config_form_alter().
 */
function deploy_extra_log_deploy_extra_config_form_alter(&$form, &$form_state, &$values) {
  $values['adv_log'] = $form_state['values']['adv_log'];
}

/**
 * Implements hook_DeployServiceRestJsonAdv_config_alter().
 */
function deploy_extra_log_DeployServiceRestJsonAdv_config_alter(&$config) {
  $config += array(
    'adv_log' => FALSE,
  );
}

/**
 * Implements hook_views_api().
 */
function deploy_extra_log_views_api() {
  return array(
    'api' => '3.0-alpha1',
    'path' => drupal_get_path('module', 'deploy_extra_log') . '/views',
  );
}

/**
 * Implements hook_deploy_extra_import_callbacks().
 */
function deploy_extra_log_deploy_extra_import_callbacks(&$callbacks, $config) {

  if (deploy_extra_log_adv_log_ability($config)) {
    // Remove save callback.
    foreach ($callbacks as $id => $callback) {
      if ($callback == DEPLOY_EXTRA_IMPORT_DEFAULT_CALLBACK) {
        unset($callbacks[$id]);
        $save_callback_exists = TRUE;
      }
    }

    // Adding checking callback.
    $callbacks[] = 'deploy_extra_log_import_check';

    // Adding save callback if it exists.
    if(!empty($save_callback_exists)) {
      $callbacks[] = DEPLOY_EXTRA_IMPORT_DEFAULT_CALLBACK;
    }
  }
}

/**
 * Implements hook_deploy_extra_import_complete().
 */
function deploy_extra_log_deploy_extra_import_complete($entity_type, $entity, $uuid, $config, $status) {
  // Update the deploy status.
  $vuuid = deploy_extra_get_vuuid_from_entity($entity, $entity_type);
  deploy_extra_import_log_status($config['deployment_key'], $uuid, $entity_type, $status, $vuuid);
}

/**
 * Helper function.
 * Check whether the import supports advanced logging.
 *
 * @param $config
 * array with import process settings.
 * @return bool
 */
function deploy_extra_log_adv_log_ability($config) {
  if ($config['adv_log'] && $config['deployment_key']) {
    return TRUE;
  }
  return FALSE;
}


/**
 * Implements hook_form_FORM_ID_alter().
 *   Alter the import form and add log to import config.
 */
function deploy_extra_log_form_deploy_extra_import_entity_import_form_alter(&$form, &$form_state, $form_id) {
  $form['import']['import_config']['adv_log'] = array(
    '#title' => t('Advanced Logging'),
    '#description' => t("Select this if the advanced logging mode should be enabled"),
    '#type' => 'checkbox',
    '#default_value' => 0,
    '#weight' => 8,
  );
}
